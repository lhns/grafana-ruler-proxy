name: build

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*.*'
  release:
    types:
      - published

env:
  IMAGE_NAME: grafana-ruler-proxy

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: SBT Build
        run: sbt "; test; assembly"

      - name: Docker Build
        run: docker build . --file Dockerfile --tag "$IMAGE_NAME" --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to GitHub Container Registry
        if: github.event_name == 'release'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Push image to GitHub Container Registry
        if: github.event_name == 'release'
        run: |
          IMAGE_ID="ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME"

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo "$IMAGE_ID" | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9] ]] && VERSION=$(echo "$VERSION" | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo "$IMAGE_ID:$VERSION"
          docker tag "$IMAGE_NAME" "$IMAGE_ID:$VERSION"
          docker tag "$IMAGE_NAME" "$IMAGE_ID:latest"
          docker push "$IMAGE_ID:$VERSION"
          docker push "$IMAGE_ID:latest"
